name: "Job Engine Release"

on:
  push:
    branches:
      - remove-maven

jobs:
  run-unittests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Generate test requirements
        run: >
          poetry export
          -f requirements.txt
          -o requirements.test.txt
          --without-hashes
          --without-urls
          --with test
          --with server

      - name: Install TOX
        run: |
          pip install tox

      - name: Run Unittests
        id: unittests-run
        run: |
          tox

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-report.xml

      - name: Generate server requirements
        run: >
          poetry export
          -f requirements.txt
          -o requirements.server.txt
          --without-hashes
          --without-urls
          --with server

      - name: Build Package
        run: |
          poetry build --format=wheel
          cp requirements.server.txt dist/requirements.txt
          cp -r scripts/ dist/
          ls -la dist/

      - name: Save wheel
        uses: actions/upload-artifact@v4
        with:
          name: freeze
          path: dist/

  release-package:
    needs: run-unittests
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      major: ${{ steps.release-please.outputs.major }}
      minor: ${{ steps.release-please.outputs.minor }}
      patch: ${{ steps.release-please.outputs.patch }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          bootstrap-sha: 17f86f605fae561c5911b7e53a7445a63027cbf5
          release-type: python
          release-as: 3.9.5
          default-branch: remove-maven

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: freeze
          path: dist/

      - name: Add artifacts to release
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Uploading artifacts to release ${{ steps.release-please.outputs.tag_name }}"
          gh release upload ${{ steps.release-please.outputs.tag_name }} ./dist/*.whl
          gh release upload ${{ steps.release-please.outputs.tag_name }} ./dist/scripts/
          gh release upload ${{ steps.release-please.outputs.tag_name }} ./dist/*.txt
 
    
#  notify:
#    name: Post Workflow Status To Slack
#    needs: release
#    if: needs.release.outputs.releases_created
#    runs-on: ubuntu-latest
#    steps:
#      - uses: Gamesight/slack-workflow-status@master
#        with:
#          repo_token: ${{secrets.GITHUB_TOKEN}}
#          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
#          include_commit_message: true